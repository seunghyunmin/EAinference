% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MHInference.R
\name{Lasso.MHLS}
\alias{Lasso.MHLS}
\title{Computes lasso estimator}
\usage{
Lasso.MHLS(X, Y, type = "lasso", lbd, group = 1:ncol(X), weights = rep(1,
  max(group)), verbose = FALSE, ...)
}
\arguments{
\item{X}{predictor matrix.}

\item{Y}{response vector.}

\item{type}{type of penalty. Must be specified to be one of the following:
\code{"lasso", "grlasso", "slasso"} or \code{"sgrlasso"}.}

\item{lbd}{penalty term of lasso. By letting this argument to \code{"cv.1se"} or
\code{"cv.min"}, users can have the cross-validated lambda that gives either minimum
squared error or that is within 1 std error bound.}

\item{group}{\code{p} x \code{1} vector of consecutive integers describing the group structure.
The number of groups should be the same as max(group). Default is \code{group = 1:p}
, where \code{p} is number of covariates.}

\item{weights}{weight vector with length equal to the number of groups. Default is
\code{rep(1, max(group))}.}

\item{verbose}{verbose for type = "slasso" or "sgrlasso".}

\item{...}{Auxiliary arguments for \code{lbd="cv.min", lbd="cv.1se"}.
See \code{\link{cv.lasso}} for more details.}
}
\value{
\item{B0}{coefficient estimator.}

\item{S0}{subgradient.}

\item{lbd, weights, group}{same as input arguments.}
}
\description{
Compute lasso, group lasso, scaled lasso, or scaled group lasso solution;
coefficient-estimate and subgradient along with sigma-estimate
if it is scaled lasso or scaled group lasso.
}
\details{
Using gglasso package, provide lasso / group lasso solution along with
subgradient. The loss function for group lasso is
\deqn{L(\beta) = ||y-X\beta||^2 / (2n) + \lambda \sum_j ||\beta_(j)||,}
where (j) is the index set of j-th group. If the size of the group is 1 for
every group, it becomes lasso loss function.
}
\examples{
set.seed(123)
n <- 50
p <- 10
X <- matrix(rnorm(n*p),n)
Y <- X \%*\% c(1,1,rep(0,p-2)) + rnorm(n)
#
# lasso
#
Lasso.MHLS(X = X,Y = Y,lbd = .5)
#
# group lasso
#
Lasso.MHLS(X = X,Y = Y, type="grlasso", lbd = .5,weights = rep(1,2),group=rep(1:2,each=5))
}
