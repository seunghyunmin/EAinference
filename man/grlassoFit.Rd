% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grlasso.R
\name{grlassoFit}
\alias{grlassoFit}
\title{Compute group lasso estimator when lambda is given.}
\usage{
grlassoFit(X, Y, lbd, weights = rep(1, max(group)), group = 1:p, Gamma,
  eps = 1e-05, returnGamma = FALSE)
}
\arguments{
\item{X}{predictor matrix.}

\item{Y}{response vector.}

\item{lbd}{numeric. penalty term of group lasso.}

\item{weights}{weight vector with length equal to the number of groups. Default is
\code{weights = rep(1, max(group))}.}

\item{group}{\code{p} x \code{1} vector of consecutive integers describing the group structure.
The number of groups should be the same as max(group). Default is \code{group = 1:p}
, where \code{p} is number of covariates.}

\item{Gamma}{groupwise maximum eigenvalue multiplied by \code{(1 + 1e-05)}.}

\item{eps}{numeric. Tolerance level. Default is \code{eps = 1e-05}}

\item{returnGamma}{logical. If \code{returnGamma = TRUE}, return \code{Gamma}.
See \code{\link{cv.lasso}} for details.}
}
\value{
\item{coef}{coefficient estimator.}

\item{Gamma}{see input arguments description.}
}
\description{
Computes group lasso solution when lambda is given.
}
\details{
Computes group lasso solution.
When users use \code{\link{grlassoFit}} repetitively with same \code{X} and
\code{group}, they can accelerate the computational speed by providing \code{Gamma}.
\code{Gamma} can be easily obtained by setting \code{returmGamma = TRUE}.
}
\examples{
set.seed(1234)
n <- 10
p <- 20
group <- rep(1:4,each=5)

X <- matrix(rnorm(n*p), n)
Y <- X \%*\% c(rep(1,5),rep(0, p-5)) + rnorm(n)
weights <- rep(1,max(group))
lbd <- .37

grlassoFit(X = X, Y = Y, lbd = lbd, weights= weights, group = group,
 returnGamma = TRUE)

Gamma <- grlassoFit(X = X, Y = Y, lbd = lbd, weights= weights, group = group,
 returnGamma = TRUE)$Gamma

grlassoFit(X = X, Y = Y, lbd = lbd, weights= weights, group = group,
           Gamma = Gamma)
}
\references{
Yang, Y. and Zou, H. (2015), “A Fast Unified Algorithm for Computing
Group-Lasso Penalized Learning Problems,” Statistics and Computing, 25(6), 1129-1141.
}
